
R version 3.2.4 Revised (2016-03-16 r70336) -- "Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmm)
Loading required package: trust
Loading required package: mvtnorm
Loading required package: Matrix
> eta<-1.23
> neta<-length(eta)
> delta<-rep(.0000000001,neta)
> 
> #check derivatives for bernoulli using finite differences
> foo<-.C("cp3",eta=as.double(eta),neta=as.integer(neta),type=as.integer(1),ntrials=as.integer(1),cpout=double(neta))$cpout
> this<-foo*delta
> that<-.C("cum3",eta=as.double(eta+delta),neta=as.integer(neta),type=as.integer(1),ntrials=as.integer(1),cumout=double(neta))$cumout-.C("cum3",eta=as.double(eta),neta=as.integer(neta),type=as.integer(1), ntrials=as.integer(1), cumout=double(neta))$cumout
> all.equal(this,that)
[1] TRUE
> 
> this<-.C("cpp3",eta=as.double(eta),neta=as.integer(neta),type=as.integer(1),ntrials=as.integer(1),cppout=double(neta))$cppout*delta
> that<-.C("cp3",eta=as.double(eta+delta),neta=as.integer(neta),type=as.integer(1),ntrials=as.integer(1),cpout=double(neta))$cpout-.C("cp3",eta=as.double(eta),neta=as.integer(neta),type=as.integer(1),ntrials=as.integer(1),cpout=double(neta))$cpout
> all.equal(this,that)
[1] TRUE
> 
> #check derivatives for poisson using finite differences
> foo<-.C("cp3",eta=as.double(eta),neta=as.integer(neta),type=as.integer(2),ntrials=as.integer(1),cpout=double(neta))$cpout
> this<-foo*delta
> that<-.C("cum3",eta=as.double(eta+delta),neta=as.integer(neta),type=as.integer(2),ntrials=as.integer(1),cumout=double(neta))$cumout-.C("cum3",eta=as.double(eta),neta=as.integer(neta),type=as.integer(2), ntrials=as.integer(1),cumout=double(neta))$cumout
> all.equal(this,that)
[1] TRUE
> 
> this<-.C("cpp3",eta=as.double(eta),neta=as.integer(neta),type=as.integer(2),ntrials=as.integer(1),cppout=double(neta))$cppout*delta
> that<-.C("cp3",eta=as.double(eta+delta),neta=as.integer(neta),type=as.integer(2),ntrials=as.integer(1),cpout=double(neta))$cpout-.C("cp3",eta=as.double(eta),neta=as.integer(neta),type=as.integer(2),ntrials=as.integer(1),cpout=double(neta))$cpout
> all.equal(this,that)
[1] TRUE
> 
> 
> 
> proc.time()
   user  system elapsed 
  2.186   0.106   2.274 
